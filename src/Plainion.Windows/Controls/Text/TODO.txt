
Document
- Id : Guid // should we have custom class and leave it to impl of IDocumentStore whether it is Guid or long or ... ?
- Title : string 
- Body : FlowDocument
- LastModified : DateTime
- Created : DateTime
- Tags

Index // stores locations of documents
- Root : Node
// add documents via path "/a/b/c[2]"

Node
- Title : string
- Documents : List<Guid> // order preserved!
- Children : Node // sub-folders


FilesystemDocumentStore
- save all in one folder
- store index in dedicated file
- store metadata in <doc id>.meta
- store body in <doc id>.body
// we could later have more files like that for performance ...


// with the "index" idea we could also search below certain subtree ...

- DocumentNavigationPane
  - make tree
  - what happens if we select a folder?
    - show the first file in that folder
  - selection of document updates nodepad
  - fix handling of initial document in NodePad
    - initially there is one even if there is no documentstore added or is empty!

- add a cache to the FileSystemDocumentStore to make impl simpler and
  to ensure that we do not unnecessarily create IO

- add buttons to DocumentNavigationPane for
  - add section to selected
  - remove selected section

- search in document

- search in all documents


- DocumentNavigationPane
  - remove unnecessary padding left to every entry

- for default impl have a look at
  - http://www.litedb.org/
  - probably this has to be put into separate dll because of dependency?
  - do we want to have a simple impl without further deps?
    - we could use zip archive from .net 4.5
	- or we just dont put it into a single file but into a folder (index file + one file per page)


